import 'package:flutter/material.dart';
import 'package:app/themes/themes.dart';
import 'package:flutter/gestures.dart' show DragStartBehavior;

class PasswordField extends StatefulWidget {
  const PasswordField(
      {Key? key,
      this.hintText,
      this.labelText,
      this.helperText,
      this.onEditingCompleted,
      this.onSaved,
      this.validator,
      this.onFieldSubmitted,
      this.inputLable = "密码"})
      : super(key: key);

  final String? hintText;
  final String? labelText;
  final String? helperText;
  final FormFieldSetter<String>? onSaved;
  final FormFieldValidator<String>? validator;
  final ValueChanged<String>? onFieldSubmitted;
  final VoidCallback? onEditingCompleted;
  final String inputLable;

  @override
  PasswordFieldState createState() => PasswordFieldState();
}

class PasswordFieldState extends State<PasswordField> {
  bool _obscureText = true;

  FocusNode _focusNode = FocusNode();
  FocusNode get focusNode => _focusNode;

  @override
  void initState() {
    super.initState();
  }

  @override
  void dispose() {
    super.dispose();
    _focusNode.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return TextFormField(
      obscureText: _obscureText,
      onSaved: widget.onSaved,
      onEditingComplete: widget.onEditingCompleted,
      validator: widget.validator,
      focusNode: _focusNode,
      onFieldSubmitted: widget.onFieldSubmitted,
      decoration: InputDecoration(
        labelText: widget.inputLable,
        border: const CutCornersBorder(
          borderSide: BorderSide(width: 0.5),
        ),
        hintText: widget.hintText,
        helperText: widget.helperText,
        suffixIcon: GestureDetector(
          dragStartBehavior: DragStartBehavior.down,
          onTap: () {
            setState(() {
              _obscureText = !_obscureText;
            });
          },
          child: Icon(_obscureText ? Icons.visibility_off : Icons.visibility),
        ),
      ),
    );
  }
}
